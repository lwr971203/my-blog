(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{464:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"qt框架功能概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#qt框架功能概述"}},[t._v("#")]),t._v(" Qt框架功能概述")]),t._v(" "),s("h2",{attrs:{id:"模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块"}},[t._v("#")]),t._v(" 模块")]),t._v(" "),s("p",[t._v("Qt框架中的模块分为两大量")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Qt Essentials")]),t._v("：Qt框架的基础模块，自动安装的")]),t._v(" "),s("li",[s("code",[t._v("Qt Addons")]),t._v("：Qt框架的附加模块")])]),t._v(" "),s("h3",{attrs:{id:"基础模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基础模块"}},[t._v("#")]),t._v(" 基础模块")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("模块")]),t._v(" "),s("th",[t._v("功能")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("Qt Core")])]),t._v(" "),s("td",[t._v("核心模块，定义了元对象系统对c++标准的拓展")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt GUI")])]),t._v(" "),s("td",[t._v("提供了GUI设计需要的基础类")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt Widgets")])]),t._v(" "),s("td",[t._v("用于创建GUI界面组件的类")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt Network")])]),t._v(" "),s("td",[t._v("提供实现TCP/IP网络通信的类")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt D-Bus")])]),t._v(" "),s("td",[t._v("D-Bus是实现进程间通信（IPC）和远程过程调用（RPC）的一种通信协议，这个模块就是提供实现D-Bus通信协议的一些类")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt Test")])]),t._v(" "),s("td",[t._v("提供单元测试")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt QML")])]),t._v(" "),s("td",[t._v("提供QML编程的框架，定义了QML和基础引擎")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt Quick")])]),t._v(" "),s("td",[t._v("用于开发QML应用程序的标准库")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt Quick Controls")])]),t._v(" "),s("td",[t._v("提供基于Qt Quick的控件，用于创建复杂的UI")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt Quick Dialogs")])]),t._v(" "),s("td",[t._v("提供通过QML使用系统对话框的功能")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt Quick Layouts")])]),t._v(" "),s("td",[t._v("提供用于管理界面布局的QML类型")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt Quick Test")])]),t._v(" "),s("td",[t._v("提供QML应用程序的单元测试")])])])]),t._v(" "),s("p",[t._v("Qt Core模块是Qt框架的核心，其他模块都依赖此模块，在创建GUI项目时，qmake将自动添加下面的语句")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("QT "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" core gui\n")])])]),s("h3",{attrs:{id:"附加模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#附加模块"}},[t._v("#")]),t._v(" 附加模块")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("模块")]),t._v(" "),s("th",[t._v("功能")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("Active Qt")])]),t._v(" "),s("td",[t._v("用于开发使用 ActiveX和 COM控件的 Windows应用程序")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt 3D")])]),t._v(" "),s("td",[t._v("支持二维和三维图形渲染，用于开发近实时的仿真系统")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt 5 Core Compatibility")])]),t._v(" "),s("td",[t._v("提供一些 Qt 5中有而 Qt 6中没有的 API，这是为了兼容 Qt 5")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt Bluetooth")])]),t._v(" "),s("td",[t._v("提供访问蓝牙硬件的功能")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt Charts")])]),t._v(" "),s("td",[t._v("提供用于数据显示的一些二维图表组件")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt Concurrent")])]),t._v(" "),s("td",[t._v("提供一些类，使我们无须使用底层的线程控制就可以编写多线程应用程序")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt Data Visualization")])]),t._v(" "),s("td",[t._v("提供用于三维数据可视化显示的一些类")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt Help")])]),t._v(" "),s("td",[t._v("提供一些在应用程序中集成帮助文档的类")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt Image Formats")])]),t._v(" "),s("td",[t._v("支持附加图片格式的插件，格式包括 TIFF、MNG和 TGA等")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt Multimedia")])]),t._v(" "),s("td",[t._v("提供处理多媒体内容的一些类，处理方式包括播放音频和视频，通过麦克风和摄像头录制音频和视频")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt Network Authorization")])]),t._v(" "),s("td",[t._v("使 Qt应用程序能访问在线账号或 HTTP服务，而又不暴露用户密码")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt NFC")])]),t._v(" "),s("td",[t._v("提供访问近场通信（near field communication，NFC）硬件的功能")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt OpenGL")])]),t._v(" "),s("td",[t._v("提供一些便于在应用程序中使用 OpenGL的类")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt Positioning")])]),t._v(" "),s("td",[t._v("通过 GPS或 WiFi定位，为应用程序提供定位信息")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt Print Support")])]),t._v(" "),s("td",[t._v("提供一些用于打印控制的类")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt Remote Objects")])]),t._v(" "),s("td",[t._v("提供一种进程间通信技术，可以在进程间或计算机之间方便地交换信息")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt SCXML")])]),t._v(" "),s("td",[t._v("用于通过 SCXML（有限状态机规范）文件创建状态机")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt Sensors")])]),t._v(" "),s("td",[t._v("提供访问传感器硬件的功能，传感器包括加速度计、陀螺仪等")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt Serial Bus")])]),t._v(" "),s("td",[t._v("提供访问串行工业总线（如 CAN和 Modbus总线）的功能")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt Serial Port")])]),t._v(" "),s("td",[t._v("提供访问兼容 RS232引脚的串行接口的功能")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt Shader Tools")])]),t._v(" "),s("td",[t._v("提供用于三维图形着色的工具")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt SQL")])]),t._v(" "),s("td",[t._v("提供一些使用 SQL操作数据库的类")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt SVG")])]),t._v(" "),s("td",[t._v("提供显示 SVG图片文件的类")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt UI Tools")])]),t._v(" "),s("td",[t._v("提供一些类，可以在程序运行时加载用 Qt Designer设计的 UI文件以动态创建 UI")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt Virtual Keyboard")])]),t._v(" "),s("td",[t._v("实现不同输入法的虚拟键盘")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt Wayland Compositor")])]),t._v(" "),s("td",[t._v("实现了 Wayland协议，能创建用户定制的显示服务")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt WebChannel")])]),t._v(" "),s("td",[t._v("用于实现服务器端（QML或 C++应用程序）与客户端（HTML/ JavaScript或 QML应用程序）进行 P2P通信")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt WebEngine")])]),t._v(" "),s("td",[t._v("提供一些类和函数，通过 Chromium浏览器项目实现在应用程序中嵌入显示动态网页")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("Qt WebSockets")])]),t._v(" "),s("td",[t._v("提供 WebSocket 通信功能。WebSocket 是一种 Web 通信协议，可实现客户端程序与远程主机的双向通信")])])])]),t._v(" "),s("h2",{attrs:{id:"全局定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局定义"}},[t._v("#")]),t._v(" 全局定义")]),t._v(" "),s("p",[t._v("头文件"),s("code",[t._v("<QtGlobal>")]),t._v("包含Qt框架中的一些全局定义，包括基本数据类型、函数和宏，一般Qt类的头文件都会包含这个头文件，所以无需我们手动包含")]),t._v(" "),s("h3",{attrs:{id:"基本数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型"}},[t._v("#")]),t._v(" 基本数据类型")]),t._v(" "),s("p",[t._v("为了确保在各个平台下的基本数据类型都有统一长度，Qt为各种常见的数据类型定义了类型符号")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("基本数据类型")]),t._v(" "),s("th",[t._v("POSIX标准等效定义")]),t._v(" "),s("th",[t._v("字节数")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("qint8")])]),t._v(" "),s("td",[s("code",[t._v("signed char")])]),t._v(" "),s("td",[t._v("1")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("qint16")])]),t._v(" "),s("td",[s("code",[t._v("signed short")])]),t._v(" "),s("td",[t._v("2")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("qint32")])]),t._v(" "),s("td",[s("code",[t._v("signed int")])]),t._v(" "),s("td",[t._v("4")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("qint64")])]),t._v(" "),s("td",[s("code",[t._v("long long int")])]),t._v(" "),s("td",[t._v("8")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("qlonglong")])]),t._v(" "),s("td",[s("code",[t._v("long long int")])]),t._v(" "),s("td",[t._v("8")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("quint8")])]),t._v(" "),s("td",[s("code",[t._v("unsigned char")])]),t._v(" "),s("td",[t._v("1")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("quint16")])]),t._v(" "),s("td",[s("code",[t._v("unsigned short")])]),t._v(" "),s("td",[t._v("2")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("quint32")])]),t._v(" "),s("td",[s("code",[t._v("unsigned int")])]),t._v(" "),s("td",[t._v("4")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("quint64")])]),t._v(" "),s("td",[s("code",[t._v("unsigned long long int")])]),t._v(" "),s("td",[t._v("8")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("qulonglong")])]),t._v(" "),s("td",[s("code",[t._v("unsigned long long int")])]),t._v(" "),s("td",[t._v("8")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("uchar")])]),t._v(" "),s("td",[s("code",[t._v("unsigned char")])]),t._v(" "),s("td",[t._v("1")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("ushort")])]),t._v(" "),s("td",[s("code",[t._v("unsigned char")])]),t._v(" "),s("td",[t._v("2")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("uint")])]),t._v(" "),s("td",[s("code",[t._v("unsigned int")])]),t._v(" "),s("td",[t._v("4")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("ulong")])]),t._v(" "),s("td",[s("code",[t._v("unsigned long")])]),t._v(" "),s("td",[t._v("8")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("qreal")])]),t._v(" "),s("td",[s("code",[t._v("double")])]),t._v(" "),s("td",[t._v("8")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("qsizetype")])]),t._v(" "),s("td",[s("code",[t._v("ssize_t")])]),t._v(" "),s("td",[t._v("8")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("qfloat16")])]),t._v(" "),s("td",[t._v("-")]),t._v(" "),s("td",[t._v("2")])])])]),t._v(" "),s("p",[s("code",[t._v("qreal")]),t._v("默认表示 8 字节"),s("code",[t._v("double")]),t._v("类型的浮点数，如果使用"),s("code",[t._v("-qreal float")]),t._v("选项进行配置，就表示4字节的"),s("code",[t._v("float")]),t._v("类型的浮点数")]),t._v(" "),s("p",[s("code",[t._v("qfloat16")]),t._v("是Qt5.9中增加的一种类型，用于表示16位的浮点数，但是"),s("code",[t._v("qfloat16")]),t._v("不是在"),s("code",[t._v("<QtGlobal>")]),t._v("中定义的，需要包含头文件"),s("code",[t._v("<QFloat16>")])]),t._v(" "),s("h3",{attrs:{id:"函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),s("p",[t._v("下面是常见的全局函数定义，只列出了输入和输出参数，如果是"),s("code",[t._v("float")]),t._v("或"),s("code",[t._v("double")]),t._v("类型参数的函数重载，则只列出"),s("code",[t._v("double")]),t._v("类型参数的重载")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("原型")]),t._v(" "),s("th",[t._v("功能")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("T qAbs(const T &value)")])]),t._v(" "),s("td",[t._v("返回变量 value的绝对值")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("const T &qBound(const T &min, const T &value, const T &max)")])]),t._v(" "),s("td",[t._v("返回 value限定在 min～max的值")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("T qExchange(T &obj, U &&newValue)")])]),t._v(" "),s("td",[t._v("将 obj的值用 newValue替换，返回 obj的旧值")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("int qFpClassify(double val)")])]),t._v(" "),s("td",[t._v("返回 val的分类，包括 FP_NAN（非数）、FP_INFINITE（正或负的无穷大）、FP_ZERO（零）等几种类型")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("bool qFuzzyCompare(double p1, double p2)")])]),t._v(" "),s("td",[t._v("若 p1 和 p2 近似相等，返回 true")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("bool qFuzzyIsNull(double d)")])]),t._v(" "),s("td",[t._v("若参数 d 约等于 0，返回 true")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("double qInf()")])]),t._v(" "),s("td",[t._v("返回无穷大的数")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("bool qIsFinite(double d)")])]),t._v(" "),s("td",[t._v("若 d 是一个有限的数，返回 true")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("bool qIsInf(double d)")])]),t._v(" "),s("td",[t._v("若 d 是一个无穷大的数，返回 true")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("bool qIsNaN(double d)")])]),t._v(" "),s("td",[t._v("若 d 为非数，返回 true")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("const T &qMax(const T &value1, const T &value2)")])]),t._v(" "),s("td",[t._v("返回 value1 和 value2中的较大值")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("const T &qMin(const T &value1, const T &value2)")])]),t._v(" "),s("td",[t._v("返回 value1 和 value2中的较小值")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("qint64 qRound64(double value)")])]),t._v(" "),s("td",[t._v("将 value近似为最接近的 qint64 类型整数")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("int qRound(double value)")])]),t._v(" "),s("td",[t._v("将 value近似为最接近的 int类型整数")])])])]),t._v(" "),s("h3",{attrs:{id:"宏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#宏"}},[t._v("#")]),t._v(" 宏")]),t._v(" "),s("p",[t._v("下面是常见的宏")]),t._v(" "),s("p",[s("code",[t._v("QT_VERSION")]),t._v("：这个宏展开为数值形式 0xMMNNPP。例如 Qt 版本为 Qt 6.2.3，则 QT_VERSION 为 0x060203")]),t._v(" "),s("p",[s("code",[t._v("Q_BYTE_ORDER")]),t._v("：表示系统内存中数据的字节序。Q_BIG_ENDIAN 表示大端字节序，Q_LITTLE_ENDIAN 表示小端字节序。在需要判断系统字节序时可以用到这几个宏，例如")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("Q_BYTE_ORDER "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" Q_LITTLE_ENDIAN")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("endif")])]),t._v("\n")])])]),s("p",[s("code",[t._v("Q_DECL_IMPORT")]),t._v("和"),s("code",[t._v("Q_DECL_EXPORT")]),t._v("：分别用于在使用或设计共享库时导入或导出库的内容")]),t._v(" "),s("p",[s("code",[t._v("Q_UNUSED(name)")]),t._v("：声明函数中未被使用的参数，减少警告")]),t._v(" "),s("p",[s("code",[t._v("foreach(variable, container)")]),t._v("：遍历容器")]),t._v(" "),s("p",[s("code",[t._v("qDebug(const char *message, ...)")]),t._v("：在 debugger 窗口显示信息")]),t._v(" "),s("h2",{attrs:{id:"元对象系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元对象系统"}},[t._v("#")]),t._v(" 元对象系统")]),t._v(" "),s("p",[t._v("Qt 中引入了元对象系统对标准 C++语言进行扩展，增加了信号与槽、属性系统、动态翻译等特性")]),t._v(" "),s("p",[t._v("使用Qt 的元对象系统功能需要满足两个条件")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("QObject")]),t._v("必须是直接基类或者间接基类")]),t._v(" "),s("li",[t._v("必须在类的开头插入一个宏"),s("code",[t._v("Q_OBJECT")])])]),t._v(" "),s("p",[t._v("构建项目时，"),s("code",[t._v("MOC")]),t._v("会读取头文件，如果发现了"),s("code",[t._v("Q_OBJECT")]),t._v("则会生成另一个包含元对象支持代码的源文件，最终这个源文件会一起加入编译")]),t._v(" "),s("h3",{attrs:{id:"qobject"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#qobject"}},[t._v("#")]),t._v(" QObject")]),t._v(" "),s("p",[t._v("下面是"),s("code",[t._v("QObject")]),t._v("与元对象系统特性相关的一些函数")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("特性")]),t._v(" "),s("th",[t._v("函数")]),t._v(" "),s("th",[t._v("功能")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("元对象")]),t._v(" "),s("td",[s("code",[t._v("QMetaObject *metaObject()")]),s("br"),s("code",[t._v("QMetaObject staticMetaObject")])]),t._v(" "),s("td",[t._v("返回这个对象的元对象"),s("br"),t._v("这是类的静态变量，不是函数，存储了类的元对象")])]),t._v(" "),s("tr",[s("td",[t._v("类型信息")]),t._v(" "),s("td",[s("code",[t._v("bool inherits()")])]),t._v(" "),s("td",[t._v("判断这个对象是不是某个类的子类的实例")])]),t._v(" "),s("tr",[s("td",[t._v("动态翻译")]),t._v(" "),s("td",[s("code",[t._v("QString tr()")])]),t._v(" "),s("td",[t._v("类的静态函数，返回一个字符串的翻译版本")])]),t._v(" "),s("tr",[s("td",[t._v("对象树")]),t._v(" "),s("td",[t._v("``QObjectList &children()"),s("code",[t._v("<br />")]),t._v("QObject *parent()"),s("code",[t._v("<br />")]),t._v("void setParent()"),s("code",[t._v("<br />")]),t._v("T findChild()"),s("code",[t._v("<br />")]),t._v("QList"),s("T",[t._v(" findChildren()`")])],1),t._v(" "),s("td",[t._v("返回子对象列表"),s("br"),t._v("返回父对象指针"),s("br"),t._v("设置父对象"),s("br"),t._v("按照对象名称，查找可被转换为类型 T的子对象"),s("br"),t._v("返回符合名称和类型条件的子对象列表")])]),t._v(" "),s("tr",[s("td",[t._v("信号与槽")]),t._v(" "),s("td",[s("code",[t._v("QMetaObject::Connection connect()")]),s("br"),s("code",[t._v("bool disconnect()")]),s("br"),s("code",[t._v("bool blockSignals()")]),s("br"),s("code",[t._v("bool signalsBlocked()")])]),t._v(" "),s("td",[t._v("设置信号与槽关联"),s("br"),t._v("解除信号与槽的关联"),s("br"),t._v("设置是否阻止对象发射任何信号"),s("br"),t._v("若返回值为 true，表示对象被阻止发射信号")])]),t._v(" "),s("tr",[s("td",[t._v("属性系统")]),t._v(" "),s("td",[s("code",[t._v("QList<QByteArray> dynamicPropertyNames()")]),s("br"),s("code",[t._v("bool setProperty()")]),s("br"),s("code",[t._v("QVariant property()")])]),t._v(" "),s("td",[t._v("返回所有动态属性名称"),s("br"),t._v("bool setProperty()"),s("br"),t._v("返回属性值")])])])]),t._v(" "),s("p",[t._v("每个"),s("code",[t._v("QOjbect")]),t._v("及其子类的实例都有一个元对象（meta object），获取一个对象的元对象有两种方式")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("QPushButton"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" btn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" QPushButton"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" QMetaObject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" meta_ptr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" btn"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("meatObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" QMetaObject meat_obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" btn"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("staticMetaObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[s("code",[t._v("inherits")]),t._v("函数可以用来判断对象是否从某个类继承")]),t._v(" "),s("p",[s("code",[t._v("tr")]),t._v("函数用于返回一个字符串的翻译版本，在设计多语言界面的时候用到")]),t._v(" "),s("p",[t._v("对象树（object tree），指的是对象间的从属关系。使用"),s("code",[t._v("parent")]),t._v("函数可以返回它的父对象，使用"),s("code",[t._v("children")]),t._v("函数可以返回它的子对象，使用"),s("code",[t._v("findChildren")]),t._v("可以返回它的某些子对象或所有子对象。"),s("strong",[t._v("在对象树中，当父对象被删除了，那么它的子对象也将自动被删除")])]),t._v(" "),s("p",[t._v("信号槽机制，通过在类的开头插入一个宏"),s("code",[t._v("Q_OBJECT")]),t._v("，我们就可以使用Qt扩展的C++特性，例如定义属性、类信息、信号和槽函数")]),t._v(" "),s("p",[t._v("属性系统，通过宏"),s("code",[t._v("Q_PROPERTY")]),t._v("定义属性，并且可以使用"),s("code",[t._v("setProperty")]),t._v("设置属性的值或定义动态属性，使用"),s("code",[t._v("property")]),t._v("函数会返回属性的值")]),t._v(" "),s("h3",{attrs:{id:"qmetaobject"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#qmetaobject"}},[t._v("#")]),t._v(" QMetaObject")]),t._v(" "),s("p",[t._v("每个"),s("code",[t._v("QObject")]),t._v("及其子类的对象都会自动创建一个元对象，元对象存储了对象所属类的各种元数据，例如类信息元数据、方法元数据、属性元数据等等，即元对象就是对类的描述对象")]),t._v(" "),s("p",[t._v("下面是"),s("code",[t._v("QMetaObject")]),t._v("常见的函数")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("分组")]),t._v(" "),s("th",[t._v("函数原型")]),t._v(" "),s("th",[t._v("功能")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("类的信息")]),t._v(" "),s("td",[s("code",[t._v("char *className()")]),s("br"),s("code",[t._v("QMetaType metaType()")]),s("br"),s("code",[t._v("QMetaObject *superClass()")]),s("br"),s("code",[t._v("bool inherits(QMetaObject *metaObject)")]),s("br"),s("code",[t._v("QObject *newInstance(...)")])]),t._v(" "),s("td",[t._v("返回这个类的类名称"),s("br"),t._v("返回这个元对象的元类型"),s("br"),t._v("返回这个类的上层父类的元对象"),s("br"),t._v("返回 true表示这个类继承自 metaObject 描述的类否则返回false"),s("br"),t._v("创建这个类的一个实例，可以给构造函数传递最多10个参数")])]),t._v(" "),s("tr",[s("td",[t._v("类信息元数据")]),t._v(" "),s("td",[s("code",[t._v("QMetaClassInfo classInfo(int index)")]),s("br"),s("code",[t._v("int indexOfClassInfo(char *name)")]),s("br"),s("code",[t._v("int classInfoCount()")]),s("br"),s("code",[t._v("int classInfoOffset()")])]),t._v(" "),s("td",[t._v("返回序号为 index 的一条类信息的元数据，类信息是在类中用宏 Q_CLASSINFO定义的一条信息"),s("br"),t._v("返回名称为name的类信息的序号，序号可用于classInfo()函数"),s("br"),t._v("返回这个类的类信息条数"),s("br"),t._v("返回这个类的第一条类信息的序号")])]),t._v(" "),s("tr",[s("td",[t._v("构造函数元数据")]),t._v(" "),s("td",[s("code",[t._v("int constructorCount()")]),s("br"),s("code",[t._v("QMetaMethod constructor(int index)")])]),t._v(" "),s("td",[t._v("返回这个类的构造函数的个数"),s("br"),t._v("返回这个类的序号为 index的构造函数的元数据")])]),t._v(" "),s("tr",[s("td",[t._v("方法元数据")]),t._v(" "),s("td",[s("code",[t._v("int indexOfConstructor(char *constructor)")]),s("br"),s("code",[t._v("QMetaMethod method(int index)")]),s("br"),s("code",[t._v("int methodCount()")]),s("br"),s("code",[t._v("int methodOffset()")]),s("br"),s("code",[t._v("int indexOfMethod(char *method)")])]),t._v(" "),s("td",[t._v("返回一个构造函数的序号，constructor包括正则化之后的函数名和参数名"),s("br"),t._v("返回序号为 index 的方法的元数据"),s("br"),t._v("返回这个类的方法的个数，包括基类中定义的方法，方法包括一般的成员函数，还包括信号和槽"),s("br"),t._v("返回这个类的第一个方法的序号"),s("br"),t._v("返回名称为 method 的方法的序号")])]),t._v(" "),s("tr",[s("td",[t._v("枚举类型元数据")]),t._v(" "),s("td",[s("code",[t._v("QMetaEnum enumerator(int index)")]),s("br"),s("code",[t._v("int enumeratorCount()")]),s("br"),s("code",[t._v("int enumeratorOffset()")]),s("br"),s("code",[t._v("int indexOfEnumerator(char *name)")])]),t._v(" "),s("td",[t._v("返回序号为 index 的枚举类型的元数据"),s("br"),t._v("返回这个类的枚举类型个数"),s("br"),t._v("返回这个类的第一个枚举类型的序号"),s("br"),t._v("返回名称为 name的枚举类型的序号")])]),t._v(" "),s("tr",[s("td",[t._v("属性元数据")]),t._v(" "),s("td",[s("code",[t._v("QMetaProperty property(int index)")]),s("br"),s("code",[t._v("int propertyCount()")]),s("br"),s("code",[t._v("int propertyOffset()")]),s("br"),s("code",[t._v("int indexOfProperty(char *name)")])]),t._v(" "),s("td",[t._v("返回序号为 index 的属性的元数据"),s("br"),t._v("返回这个类的属性的个数"),s("br"),t._v("返回这个类的第一个属性的序号"),s("br"),t._v("返回名称为 name的属性的序号")])]),t._v(" "),s("tr",[s("td",[t._v("信号与槽")]),t._v(" "),s("td",[s("code",[t._v("int indexOfSignal(char *signal)")]),s("br"),s("code",[t._v("int indexOfSlot(char *slot)")])]),t._v(" "),s("td",[t._v("返回名称为 signal的信号的序号"),s("br"),t._v("返回名称为 slot的槽函数的序号")])]),t._v(" "),s("tr",[s("td",[t._v("静态函数")]),t._v(" "),s("td",[s("code",[t._v("bool checkConnectArgs(...)")]),s("br"),s("code",[t._v("void connectSlotsByName(QObject *object)")]),s("br"),s("code",[t._v("bool invokeMethod(...)")]),s("br"),s("code",[t._v("QByteArray normalizedSignature(char *method)")])]),t._v(" "),s("td",[t._v("检查信号与槽函数的参数是否兼容"),s("br"),t._v("迭代搜索 object的所有子对象，将匹配的信号和槽连接起来"),s("br"),t._v("运行 QObject 对象的某个方法，包括信号、槽或成员函数"),s("br"),t._v("将方法 method 的名称和参数字符串正则化，去除多余空格。函数返回的结果可用于 checkConnectArgs()、indexOfConstructor()等函数")])])])]),t._v(" "),s("p",[t._v("通过使用"),s("code",[t._v("QObject")]),t._v("和"),s("code",[t._v("QMetaObject")]),t._v("提供的一些的函数，可以在运行时获取类型信息，我们并不需要通过c++编译器提供的"),s("code",[t._v("RTTI")]),t._v("支持")]),t._v(" "),s("p",[t._v("获得类名称：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("QPushButton"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" btn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QPushButton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" QMetaObject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" meta "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" btn"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("meatObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nQString str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("meta"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("className")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "QPushButton"')]),t._v("\n")])])]),s("p",[t._v("判断对象是否继承自某个类")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("QPushButton"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" btn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QPushButton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" btn"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("inherits")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"QPushButton"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nresult "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" btn"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("inherits")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"QObject"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nresult "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" btn"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("inherits")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"QWidget"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nresult "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" btn"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("inherits")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"QCheckBox"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("注：如果一个类是多重继承的，并且其中一个类是"),s("code",[t._v("QObject")]),t._v("，那么"),s("code",[t._v('inherits("QObject")')]),t._v("同样会返回"),s("code",[t._v("true")])])]),t._v(" "),s("p",[t._v("获得父类的元对象")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("QPushButton"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" btn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QPushButton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" QMetaObject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" meta "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" btn"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("metaObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nQString str1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("meta"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("className")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// str1 = "QPushButton"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" QMetaObject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" metaSuper "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" btn"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("metaObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("superClass")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nQString str2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("metaSuper"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("className")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// str2 = "QAbstractButton"')]),t._v("\n")])])]),s("p",[t._v("Qt版本的"),s("code",[t._v("dynamic_cast")]),t._v("函数，也是用来进行继承关系中进行动态类型转换的。但是需要类属于Qt元对象系统可管控的类")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("QObject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" btn "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QPushButton")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" QMetaObject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" meta "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" btn"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("metaObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nQString str1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("meta"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("className")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// str1 = "QPushButton"')]),t._v("\n\nQPushButton"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" btn_push "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token generic-function"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qobject_cast")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("QPushButton"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("btn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ok")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" QMetaObject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" meta2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" btn_push"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("metaObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nQString str2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("meta2"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("className")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// str2 = "QPushButton"')]),t._v("\n\nQCheckBox"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" chkBox "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token generic-function"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("qobject_cast")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("QCheckBox"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("btn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 转换失败，并且chkBox是nullptr")]),t._v("\n")])])]),s("h3",{attrs:{id:"属性系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#属性系统"}},[t._v("#")]),t._v(" 属性系统")]),t._v(" "),s("p",[t._v("使用宏"),s("code",[t._v("Q_PROPERTY")]),t._v("定义属性，格式如下")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Q_PROPERTY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("name")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("READ getFunction "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("WRITE setFunction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\nMEMBER memberName "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("READ getFunction "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" WRITE setFunction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("RESET resetFunction"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NOTIFY notifySignal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("REVISION "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("REVISION")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DESIGNABLE "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("SCRIPTABLE "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("STORED "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("USER "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("BINDABLE bindableProperty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("CONSTANT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("FINAL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("REQUIRED"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("type")]),t._v("：属性值的类型，可以是"),s("code",[t._v("QVariant")]),t._v("支持的任何类型")]),t._v(" "),s("li",[s("code",[t._v("name")]),t._v("：属性的名称")]),t._v(" "),s("li",[s("code",[t._v("READ")]),t._v("：指定一个读取属性值的函数，当没有"),s("code",[t._v("MEMBER")]),t._v("时必须设置")]),t._v(" "),s("li",[s("code",[t._v("WRITE")]),t._v("：指定一个设置属性值的函数，如果是只读属性则没有"),s("code",[t._v("WRITE")]),t._v("配置")]),t._v(" "),s("li",[s("code",[t._v("MEMBER")]),t._v("：指定一个成员变量与属性关联，并让属性成为可读可写属性，指定后不再设置"),s("code",[t._v("READ")]),t._v("和"),s("code",[t._v("WRITE")])]),t._v(" "),s("li",[s("code",[t._v("RESET")]),t._v("：可选的，指定一个用于设置属性默认值的函数")]),t._v(" "),s("li",[s("code",[t._v("NOTIFY")]),t._v("：可选的，用于设置一个信号，当属性值发生改成时发射")]),t._v(" "),s("li",[s("code",[t._v("DESIGNABLE")]),t._v("：表示属性是否在Qt Designer的属性编辑器中可见，默认为"),s("code",[t._v("true")])]),t._v(" "),s("li",[s("code",[t._v("USER")]),t._v("：表示这个属性是否为用户可编辑的，默认值为"),s("code",[t._v("false")]),t._v("。通常一个类只有一个"),s("code",[t._v("USER")]),t._v("设置为"),s("code",[t._v("true")]),t._v("的属性，例如"),s("code",[t._v("QAbstractButton")]),t._v("的"),s("code",[t._v("checked")]),t._v("属性")]),t._v(" "),s("li",[s("code",[t._v("CONSTANT")]),t._v("：表示属性为一个只读属性。具有"),s("code",[t._v("CONSTANT")]),t._v("的属性不能有"),s("code",[t._v("WRITE")]),t._v("和"),s("code",[t._v("NOTYFY")])]),t._v(" "),s("li",[s("code",[t._v("FINAL")]),t._v("：表示所定义的属性不能被子类重写")])]),t._v(" "),s("p",[t._v("下面是定义属性的一些例子：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Q_PROPERTY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" focus READ hasFocus"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Q_PROPERTY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" enabled READ isEnabled WRITE setEnabled"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Q_PROPERTY")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("QCursor cursor READ cursor WRITE setCursor RESET unsetCursor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("对于可读可写的属性，读取属性值的函数通常就是属性名，设置属性值的函数就是"),s("code",[t._v("set")]),t._v("前缀与属性名的驼峰命名，例如：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("QString "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QLabel")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("text")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 读取text属性的函数")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QLabel")]),s("span",{pre:!0,attrs:{class:"token double-colon punctuation"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setText")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" QString"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置text属性的函数")]),t._v("\n")])])]),s("p",[t._v("可以使用"),s("code",[t._v("QObject")]),t._v("继承来的"),s("code",[t._v("property")]),t._v("函数或"),s("code",[t._v("setProperty")]),t._v("函数来读取或设置属性值，例如：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" isFlat "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ui"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("btnProperty"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("property")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"flat"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBool")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nui"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("btnProperty"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"flat"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("isFlat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("注："),s("code",[t._v("QObject::property")]),t._v("函数的返回值类型是"),s("code",[t._v("QVariant")]),t._v("类型，需要转成具体的类型")])]),t._v(" "),s("p",[t._v("可以使用"),s("code",[t._v("QMetaObject")]),t._v("提供的一些函数获取属性元数据对象，例如：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" QMetaObject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" meta "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ui"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("spinBoy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("metaObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" meta"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOfProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"value"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nQMetaProperty prop "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" meta"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("property")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取属性的元数据")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" res "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" prop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isWritable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 该属性是否可写")]),t._v("\nres "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" prop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isDesignable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 该属性是否可在Qt Designer中显示")]),t._v("\nres "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" prop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasNotifySignal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 该属性改变时是否发生信号")]),t._v("\n")])])]),s("p",[t._v("当使用"),s("code",[t._v("QObject::setProperty")]),t._v("设置属性值时，如果属性名称原本不存在，那么就为"),s("strong",[t._v("这个对象")]),t._v("定义一个动态属性。因为动态属性是针对对象实例所定义的，所以只能使用"),s("code",[t._v("QObject::property")]),t._v("函数进行读取，例如：")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[t._v("editName"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"required"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncomboSex"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"required"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncheckAgree"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setProperty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"required"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("如上所示，然后我们就可以通过"),s("code",[t._v("qss")]),t._v("将属性值为"),s("code",[t._v("true")]),t._v("的背景色设置为亮绿色")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v('*[required="true"]')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-color")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" lime\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"类信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类信息"}},[t._v("#")]),t._v(" 类信息")]),t._v(" "),s("p",[t._v("使用宏"),s("code",[t._v("Q_CLASSINFO")]),t._v("定义一些附加的类信息，例如")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QMyClass")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token base-clause"}},[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("QObject")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Q_OBJECT\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Q_CLASSINFO")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"author"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Wang"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Q_CLASSINFO")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"company"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"UPC"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Q_CLASSINFO")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"version"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3.0.1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("注：类信息有名称和值，只能用字符串表示")])]),t._v(" "),s("p",[t._v("可以使用"),s("code",[t._v("QMetaObject")]),t._v("提供的一些函数获取类信息元数据对象，例如")]),t._v(" "),s("div",{staticClass:"language-cpp extra-class"},[s("pre",{pre:!0,attrs:{class:"language-cpp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" QMetaObject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" meta "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ui"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("spinBoy"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("metaObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" meta"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("indexOfClassInfo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"author"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nQMetaClassInfo class_info "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" meta"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("classInfo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nQString str1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("class_info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// str1 = "author"')]),t._v("\nQString str2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("QString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("class_info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// str2 = "Wang"')]),t._v("\n")])])]),s("h3",{attrs:{id:"信号与槽"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#信号与槽"}},[t._v("#")]),t._v(" 信号与槽")])])}),[],!1,null,null,null);s.default=e.exports}}]);